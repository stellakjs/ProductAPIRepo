{
	"info": {
		"_postman_id": "c84c985f-e210-44dd-ad65-cdf33ba3bc0e",
		"name": "productsapp-automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33694889"
	},
	"item": [
		{
			"name": "Request as Get All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"//Item 1 ",
							"pm.test(\"value of [0].id to be 1\", () => {pm.expect(jsonData[0].Id).to.equal(1)});",
							"pm.test(\"Value of [0].Name to be Tomato Soup\", () => {pm.expect(jsonData[0].Name).to.equal(\"Tomato Soup\")});",
							"pm.test(\"Value of [0].Category ro be Groceries\", () => {pm.expect(jsonData[0].Category).to.equal(\"Groceries\")});",
							"pm.test(\"Value of [0].Price to be 1.0\", () => {pm.expect(jsonData[0].Price).to.equal(1.0)});",
							"",
							"//item 2",
							"pm.test(\"value of [1].id to be 2\", () => {pm.expect(jsonData[1].Id).to.equal(2)});",
							"pm.test(\"Value of [1].Name to be Yo-yo\", () => {pm.expect(jsonData[1].Name).to.equal(\"Yo-yo\")});",
							"pm.test(\"Value of [1].Category ro be Toys\", () => {pm.expect(jsonData[1].Category).to.equal(\"Toys\")});",
							"pm.test(\"Value of [1].Price to be 3.75\", () => {pm.expect(jsonData[1].Price).to.equal(3.75)});",
							"",
							"//item 3",
							"pm.test(\"value of [2].id to be 3\", () => {pm.expect(jsonData[2].Id).to.equal(3)});",
							"pm.test(\"Value of [2].Name to be Hammer\", () => {pm.expect(jsonData[2].Name).to.equal(\"Hammer\")});",
							"pm.test(\"Value of [2].Category ro be Hardware\", () => {pm.expect(jsonData[2].Category).to.equal(\"Hardware\")});",
							"pm.test(\"Value of [2].Price to be 16.99\", () => {pm.expect(jsonData[2].Price).to.equal(16.99)});",
							"",
							"",
							"pm.test(\"response to be 200 OK\", () => {pm.response.to.have.status(200)});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44339/api/products",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44339",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"//The Ids are returned in the previous endpoint which you just wrote tests for. Select one of the products and write 4 tests for each of the variables returned, and a response code test",
							"pm.test(\"value of  id to be 1\", () => {pm.expect(jsonData.Id).to.equal(1)});",
							"pm.test(\"Value of  Name to be Tomato Soup\", () => {pm.expect(jsonData .Name).to.equal(\"Tomato Soup\")});",
							"pm.test(\"Value of  Category ro be Groceries\", () => {pm.expect(jsonData .Category).to.equal(\"Groceries\")});",
							"pm.test(\"Value of  Price to be 1.0\", () => {pm.expect(jsonData.Price).to.equal(1.0)});",
							"",
							" ",
							"pm.test(\"response to be 200 OK\", () => {pm.response.to.have.status(200)});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44339/api/products/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44339",
					"path": [
						"api",
						"products",
						"1"
					]
				}
			},
			"response": []
		}
	]
}